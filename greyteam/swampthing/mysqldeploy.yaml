---
- name: Deploy MySQL Server on Debian and Join AD Domain
  hosts: sql
  become: yes
  vars:
    domain_name: "reallyscary.local"
    domain_user: "chucky@reallyscary.local"
    domain_password: "Changeme123!"
    mysql_blackteam_password: "blackteam"
    realm_packages:
      - realmd
      - sssd
      - sssd-tools
      - adcli
      - krb5-user
      - packagekit
      - libnss-sss
      - libpam-sss
  tasks:
    - name: Update apt cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install MySQL Server
      apt:
        name: default-mysql-server
        state: present

    - name: Install python3-pymysql
      apt:
        name: python3-pymysql
        state: present

    - name: Start and Enable MySQL Service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create blackteam mysql user
      ansible.builtin.command: sudo mysql -e "CREATE USER 'blackteam'@'%' IDENTIFIED BY 'blackteam';"
      ignore_errors: true

    - name: Grant permission to blackteam user
      ansible.builtin.command: sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'blackteam'@'%' WITH GRANT OPTION;"
      ignore_errors: false

    - name: Install required packages for AD integration
      apt:
        name: "{{ realm_packages }}"
        state: present

#    - name: Join the server to the AD domain
#      command: >
#        echo "{{ domain_password }}" | realm join --user="{{ domain_user }}" "{{ domain_name }}"
#      register: join_result
#      ignore_errors: yes

#    - name: Verify AD domain join status
#      debug:
#        msg: "AD domain join result: {{ join_result.stdout }}"

    - name: Enable and start SSSD service
      service:
        name: sssd
        state: started
        enabled: yes

    - name: Edit MySQL config file to allow remote connections
      blockinfile:
        path: /etc/mysql/my.cnf
        prepend_newline: true
        block: |
          [mysqld]
          skip-networking=0
          skip-bind-address

    - name: Restart MySQL service to apply changes
      service:
        name: mysql
        state: restarted

    - name: Create database
      community.mysql.mysql_db:
        name: hauntedhouse
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Copy SQL script to target
      copy:
        src: populatedb.sql
        dest: /home/blackteam/populatedb.sql
        owner: blackteam
        group: blackteam
        mode: '0777'

    - name: Run SQL script to populate database
      ansible.builtin.command: mysql --user="blackteam" --password="blackteam" --database="hauntedhouse" -e "source /home/blackteam/populatedb.sql"
